/**
 * TypeScript 配置文件
 * @description 该配置文件用于设置 TypeScript 编译器选项和项目结构
 * @see {@link https://www.typescriptlang.org/tsconfig} 官方文档
 */
{
  "compilerOptions": {
    /** @description 指定 ECMAScript 目标版本 */
    "target": "ES2020",
    /** @description 使用 define 关键字声明类字段 */
    "useDefineForClassFields": true,
    /** @description 指定模块代码生成方式 */
    "module": "ESNext",
    /** @description 指定要包含的库文件 */
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    /** @description 跳过声明文件的类型检查 */
    "skipLibCheck": true,

    /* Bundler mode */
    /** @description 指定模块解析策略 */
    "moduleResolution": "bundler",
    /** @description 允许导入带有 .ts/.tsx 扩展名的文件 */
    "allowImportingTsExtensions": true,
    /** @description 确保每个文件都被视为一个独立的模块 */
    "isolatedModules": true,
    /** @description 强制模块检测 */
    "moduleDetection": "force",
    /** @description 不生成输出文件 */
    "noEmit": true,
    /** @description 保留 JSX 语法以供其他工具处理 */
    "jsx": "preserve",

    /* Linting */
    /** @description 启用所有严格类型检查选项 */
    "strict": true,
    /** @description 报告未使用的局部变量错误 */
    "noUnusedLocals": true,
    /** @description 报告未使用的参数错误 */
    "noUnusedParameters": true,
    /** @description 防止 switch 语句中的 case 贯穿 */
    "noFallthroughCasesInSwitch": true,

    /** @description 设置基准目录，用于解析非相对模块名称 */
    "baseUrl": ".",
    /** @description 设置模块路径别名 */
    "paths": {
      "@/*": ["src/*"]
    },
    /** @description 要包含的类型声明文件包 */
    "types": ["node"],
    /** @description 指定类型声明文件的根目录 */
    "typeRoots": ["./node_modules/@types", "./types"]
  },
  /**
   * @description 指定要包含的文件模式
   * @type {string[]}
   */
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "src/**/*.d.ts",
    "src/types/**/*.d.ts"
  ]
}
